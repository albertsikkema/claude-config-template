# TODO for Legal Associate Backend

- [x] how does the changed docker-compose file affect the deployment in Azure? And how to deploy a docker container in Azure next to the container that runs this application?
- [ ] universal way to import and verify env variables, like azure endpoint in app/services/azure_openai.py
- [ ] Improvement #5: Implement token counting with tiktoken library for cost tracking and analytics. See [reviews/20251001075130_review.md](../../reviews/20251001075130_review.md#5-feature-enhancement-token-counting)
- [ ] Improvement #6: Fix integration test rate limiting logic to prevent flaky tests with proper isolation. See [reviews/20251001075130_review.md](../../reviews/20251001075130_review.md#6-testing-integration-test-rate-limiting-logic)
- [ ] Improvement #7: Enhance API documentation with client examples (JavaScript/Python) for SSE streaming. See [reviews/20251001075130_review.md](../../reviews/20251001075130_review.md#7-documentation-api-documentation-enhancement)
- [ ] Improvement #8: Update MessageRole enum to use str mixin for better JSON serialization. See [reviews/20251001075130_review.md](../../reviews/20251001075130_review.md#8-best-practice-enum-consistency)
- [ ] Improvement #9: Centralize magic numbers into configuration management system. See [reviews/20251001075130_review.md](../../reviews/20251001075130_review.md#9-maintainability-magic-numbers)
- [ ] Improvement #10: Design and implement citation generation system with vector database. See [reviews/20251001075130_review.md](../../reviews/20251001075130_review.md#10-architecture-citation-generation-placeholder)
- [ ] check rules for password creation (lenght, chars etc)
- [x] Ensure integration tests always create fresh database instances (local, pre-commit, GitHub Actions) - never reuse existing connections or databases. See plan: thoughts/shared/plans/2025-10-01-mock-database-for-unit-tests.md
- [ ] use middleware logging for all endpoint timing

- [x] app/routers/chat.py - make sure there is a layer between the api side and the db execution. Make sure to use chat_service functions instead of calling the db in the http api layer.
- [ ] move the openai integration into an abstraction layer, so multiple models can be added. app/services/chat_service.py
- [ ] add integration tests for endpoints that are not covered in other integration tests. (health, root etc.) 
- [ ] create a title for the session based on the content of the first message, using LLM
