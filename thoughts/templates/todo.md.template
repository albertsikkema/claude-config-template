# Project TODO

> Active work items prioritized by Must Have (critical for MVP/current release) vs Should Have (important but not blocking).

**Triage Guide**:
- **Must Have**: Critical for launch/current release. Cannot ship without this.
- **Should Have**: Important enhancement. Would be great to have but not blocking.

---

## Must Haves

_Work that is critical for MVP/current release. Cannot ship without these._

### Features
- [ ] [Feature description - be specific and actionable]
- [ ] [Another feature]
- [ ] [Feature with dependency] (requires: [other feature])

### Bugs & Fixes
- [ ] [Bug description with impact]

### Improvements
- [ ] [Improvement to existing feature]

### Technical & Infrastructure
- [ ] [Technical work item]
- [ ] [Infrastructure setup]

---

## Should Haves

_Important work that enhances the product but isn't blocking launch._

### Features
- [ ] [Enhancement description]

### Improvements
- [ ] [Improvement to existing feature]

### Technical & Infrastructure
- [ ] [Nice-to-have technical work]

---

## Could Haves (Optional Section)

_Nice-to-have items that may or may not happen._

- [ ] [Low priority item]

---

## Notes

**Adding Items**:
- Be specific and actionable
- Include enough context for anyone to pick up the work
- Link to research/ADRs if relevant (e.g., "See `thoughts/shared/research/2025-10-20-topic.md`")

**Prioritization**:
- Review regularly and move items between sections as priorities shift
- When in doubt: "Can we ship without this?" â†’ No = Must Have, Yes = Should Have
- Reorder items within sections as dependencies or priorities change

**Blocked Items**:
- Add `[BLOCKED]` prefix when work cannot proceed
- Format: `- [ ] [BLOCKED] Item - blocker description (contact/action)`
- Examples:
  - `- [ ] [BLOCKED] Payment API - waiting for credentials (finance@company.com)`
  - `- [ ] [BLOCKED] Email notifications - decide on provider (research due 2025-10-22)`
- Remove `[BLOCKED]` prefix when unblocked
- Item stays in its original priority section

**Dependencies**:
- Order items top-to-bottom (do higher items first)
- For explicit dependencies, mention in description
- Examples:
  - `- [ ] Shopping cart functionality (requires: user authentication)`
  - `- [ ] Checkout flow (requires: shopping cart, payment integration)`
- Reorder items as dependencies or priorities change

**Completion**:
- Check off items when fully done (tested, reviewed, merged, deployed)
- **Move to done.md immediately** with completion date and plan reference
- Keep this file focused on active work only

---

*Last Updated: [Date]*
*Status: Living Document - Update Constantly*
